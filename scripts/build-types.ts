import { readFileSync, writeFileSync } from 'node:fs'
import { resolve } from 'node:path'
function cureClosingCurlyBraces(text: string) {
    const { length } = text
    let result = text
    let openedBracesCount = 0
    for (let i = 0; i < length; i += 1) {
        if (result[i] === '{') {
            openedBracesCount += 1
        }
        if (result[i] === '}') {
            openedBracesCount -= 1
        }
        if (openedBracesCount === -1) {
            openedBracesCount = 0
            result = result.slice(0, i) + result.slice(i + 1)
            i -= 1
        }
    }
    return result
}
const fileContent = (preparedTypes: string) => `/* AUTOGENERATED TYPES */         
${preparedTypes}
`

const preparedTypes = readFileSync(resolve('./declarations.d.ts')).toString()
    .replace(/declare\smodule\s".+" {/g, '')
    .replace(/import\s[^}]+}.+\n/g, '')
    .replace(/\s=\sTypes.ObjectId;\n/g, ' = string;\n')
    .replace(/:\sDate;\n/g, ': string;\n')

const curedText = cureClosingCurlyBraces(preparedTypes)

writeFileSync(resolve('./types.d.ts'), fileContent(curedText))
